
buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        //plugin needed to generate POJO from Avro schema
        classpath("com.commercehub.gradle.plugin:gradle-avro-plugin:0.9.1")
        //classpath("org.apache.avro:avro")
       // classpath("io.confluent:kafka-avro-serializer")
    }
}


plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	
	id "maven-publish"
    id "java-gradle-plugin"
    
    id "com.commercehub.gradle.plugin.avro" version "0.9.1"
	id "com.commercehub.gradle.plugin.avro-base" version "0.9.1"
	
	//id 'org.springframework.boot:spring-boot-gradle-plugin'
    
    
    //Data formatting
    //id 'com.fasterxml.jackson.core:jackson-databind'
    //id 'com.googlecode.json-simple:json-simple'


   //Avro
    //compile 'org.apache.avro:avro:1.8.2'
    //id 'org.apache.kafka:kafka-clients'
    //id 'io.confluent:kafka-avro-serializer'
   // id 'org.json:json'
    
}

/*
gradlePlugin {
    plugins {
        avro {
            id = "com.commercehub.gradle.plugin.avro"
            implementationClass = "com.commercehub.gradle.plugin.avro.AvroPlugin"
        }
        avroBase {
            id = "com.commercehub.gradle.plugin.avro-base"
            implementationClass = "com.commercehub.gradle.plugin.avro.AvroBasePlugin"
        }
    }
}
*/

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'


//def compileAvroVersion = "1.9.2"

repositories {
	   jcenter()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
        //maven { url "https://repo.spring.io/snapshot" }
        //maven { url "ttps://repo.spring.io/milestone" }
        maven { url "http://packages.confluent.io/maven/" }
}

dependencies {
    
    //Spring
    compile 'org.springframework.boot:spring-boot-starter-web'
   // compile 'org.springframework.boot:spring-boot-gradle-plugin'
    
    
    //Data formatting
    compile 'com.fasterxml.jackson.core:jackson-databind'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'


   //Avro
    compile 'org.apache.avro:avro:1.9.2'
    compile 'org.apache.kafka:kafka-clients'
    compile 'io.confluent:kafka-avro-serializer:5.3.0'
    compile 'org.json:json:20190722'
    

}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.kafka:kafka-clients'
    implementation 'io.confluent:kafka-avro-serializer'
    implementation 'org.json:json'
   // implementation 'org.springframework.boot:spring-boot-gradle-plugin'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.googlecode.json-simple:json-simple'
	
	implementation 'org.apache.avro:avro'
	//implementation "org.apache.avro:avro-compiler:${compileAvroVersion}"
	
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}


def generateAvro = tasks.register("generateAvro", com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    source("src/main/resources/avro")
    outputDir = file("src/main/java/")
}

tasks.named("compileJava").configure {
    source(generateAvro)
}

avro {
    stringType = "CharSequence"
    fieldVisibility = "PRIVATE"
}


test {
	useJUnitPlatform()
}
